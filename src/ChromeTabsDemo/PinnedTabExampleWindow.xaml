<controls:ChromeTabsBaseWindow
	x:Class="Demo.PinnedTabExampleWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
	xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
	xmlns:local="clr-namespace:Demo"
	xmlns:ct="clr-namespace:ChromeTabs;assembly=ChromeTabs"
	xmlns:usercontrols="clr-namespace:Demo.UserControls"
	xmlns:conv="clr-namespace:Demo.Converters"
	xmlns:controls="clr-namespace:KsWare.Presentation.Controls;assembly=KsWare.Presentation.ChromeTabControl"
	xmlns:vm="clr-namespace:Demo.ViewModels"
	mc:Ignorable="d"
	Title="PinnedTabExample"
	Height="500"
	Width="500"
	d:DataContext="{d:DesignInstance vm:PinnedTabExampleWindowVM, IsDesignTimeCreatable=False}">
	<!--This example shows how you implement pinned tab functionality-->
	<Window.Resources>
		<conv:InverseBooleanToVisibilityConverter x:Key="InverseBooleanToVisibilityConverter" />
		<conv:BooleanToPinTabTextConverter x:Key="BooleanToPinTabTextConverter" />
		<DataTemplate DataType="{x:Type vm:Class1TabItemVM}">
			<usercontrols:UserControl1 />
		</DataTemplate>
		<DataTemplate DataType="{x:Type vm:Class2TabItemVM}">
			<usercontrols:UserControl2 />
		</DataTemplate>
		<DataTemplate
			DataType="{x:Type vm:Class3TabItemVM}">
			<usercontrols:UserControl3 />
		</DataTemplate>
	</Window.Resources>
	<Grid>
		<ct:ChromeTabControl
			x:Name="TabControl"
			Background="AliceBlue"
			ItemsSource="{Binding TabItems}"
			SelectedItem="{Binding CurrentTabItem}"
			AddTabCommand="{Binding AddNewTabAction}"
			PinTabCommand="{Binding PinTabAction}"
			CloseTabCommand="{Binding CloseTabAction}"
			ReorderTabsCommand="{Binding ReorderTabsAction}"
			TabDraggedOutsideBonds="TabControl_TabDraggedOutsideBonds"
			ContainerItemPreparedForOverride="TabControl_ContainerItemPreparedForOverride"
			MinimumTabWidth="40"
			PinnedTabWidth="50"
			MaximumTabWidth="125">
			<!--We override the control template here to show how you can modify the properties of tab panel and content presenter-->
			<ct:ChromeTabControl.Template>
				<ControlTemplate
					TargetType="{x:Type ct:ChromeTabControl}">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition
								Height="30" />
							<RowDefinition
								Height="*" />
						</Grid.RowDefinitions>
						<Border
							Background="{TemplateBinding Background}"
							BorderThickness="0,0,0,1"
							BorderBrush="#FF999999"
							Grid.Row="0"
							Padding="10,5,10,0">
							<ct:ChromeTabPanel IsItemsHost="True" Background="{TemplateBinding Background}" />
						</Border>
						<Grid Grid.Row="1">
							<Border Background="WhiteSmoke">
								<ContentPresenter
									Content="{TemplateBinding SelectedContent}" />
							</Border>
						</Grid>
					</Grid>
				</ControlTemplate>
			</ct:ChromeTabControl.Template>
			<!--We must override the item template to show our tab name in the header. Here we use a simple
            textblock, but you could put any combination of controls here. Uncomment the orange border to show
            the bounds of the header content presenter-->
			<ct:ChromeTabControl.ItemTemplate>
				<DataTemplate>
					<Grid Tag="{Binding RelativeSource={RelativeSource AncestorType={x:Type ct:ChromeTabItem}}}">

						<!--<Border BorderBrush="Orange"
                                BorderThickness="1">-->
						<StackPanel Orientation="Horizontal" Background="Transparent">
							<Image
								Source="{Binding TabIcon}"
								Stretch="Fill"
								Margin="5" />
							<TextBlock
								Text="{Binding Title}"
								Visibility="{Binding IsPinned,Converter={StaticResource InverseBooleanToVisibilityConverter}}"
								TextWrapping="NoWrap"
								TextTrimming="CharacterEllipsis"
								VerticalAlignment="Center" />
						</StackPanel>
						<!--</Border>-->

						<!--We can implement a context menu for the header here. The ChromeTabItems expose for convenience the following commands, "CloseTabCommand: close the current tab, "CloseAllTabsCommand", and "CloseOtherTabsCommand", which closes all tabs except the current.-->
						<Grid.ContextMenu>
							<ContextMenu>
								<MenuItem
									Header="Close"
									Command="{Binding Path=PlacementTarget.Tag.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
								<MenuItem
									Header="Close all"
									Command="{Binding Path=PlacementTarget.Tag.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" />
								<MenuItem
									Header="Close other tabs"
									Command="{Binding Path=PlacementTarget.Tag.CloseOtherTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
									CommandParameter="{Binding}" />
								<Separator />
								<MenuItem
									Header="{Binding IsPinned, Converter={StaticResource BooleanToPinTabTextConverter}}"
									Command="{Binding Path=PlacementTarget.Tag.PinTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									CommandTarget="{Binding Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
									CommandParameter="{Binding}" />
							</ContextMenu>
						</Grid.ContextMenu>
					</Grid>
				</DataTemplate>
			</ct:ChromeTabControl.ItemTemplate>
		</ct:ChromeTabControl>
	</Grid>
</controls:ChromeTabsBaseWindow>
